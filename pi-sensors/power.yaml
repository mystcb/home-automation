- hosts: power
  become: true
  tasks:
    - meta: flush_handlers

    - name: Import Secrets
      include_vars: secrets.yaml

    - name: Ensure hostname is set
      hostname: name={{ inventory_hostname }}
      when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')

    - name: Deploy the SSH Key
      authorized_key: user=pi
                      key="{{ lookup('file','/Users/colin/.ssh/colin-2021.pub') }}"
                      state=present

    - name: Update hosts file with hostname
      lineinfile:
        dest=/etc/hosts
        regexp="^{{ ansible_default_ipv4.address }}.+$"
        line="{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"

    - name: Configure the MOTD
      template: src=templates/motd.j2 dest=/etc/motd owner=root group=root mode=0644

    - name: Enable UART on boot
      when: sensor_type == "power"
      block: 
        - name: Enable UART in boot/config.txt
          lineinfile:
            dest=/boot/config.txt
            regexp="^enable_uart=1"
            line="enable_uart=1"
          register: reboot

        - name: Reboot on enable of UART (if required)
          reboot:
            reboot_timeout: 120
            test_command: mount
          when: reboot.changed

    - name: Update and packages on the sensors
      apt: update_cache=yes upgrade=yes

    - name: Install packages
      apt: 
        name: 
          - python3
          - python3-pip
          - python3-gpiozero
          - i2c-tools
          - libi2c-dev
          - git
        state: present

    - name: Get requirements from python3-pip
      pip: 
        executable: /usr/bin/pip3
        name:
          - paho-mqtt
          - pyserial

    - name: Install the Power Sensor Scripts
      when: sensor_type == "power"
      block: 
        - name: Copy power sensor scripts
          copy: src=code/powersensor/powersensor-RPICT3V1.py dest=/usr/local/bin/powersensor owner=root group=root mode=0755
        - name: Copy power sensor service scripts
          copy: src=code/powersensor/powersensor.service dest=/etc/systemd/system/powersensor.service owner=root group=root mode=0644
        - name: Copy the power sensor config to home
          template: src=code/powersensor/powersensor.json.j2 dest=/home/pi/powersensor.json owner=pi group=pi mode=0644
        - name: Start and enable the power sensor service
          systemd:
            state: started
            enabled: yes
            daemon_reload: yes
            name: powersensor

    - name: Install the Solar Sensor Scripts
      when: sensor_type == "solar"
      block: 
        - name: Copy solar sensor scripts
          copy: src=code/solarsensor/solarsensor.py dest=/usr/local/bin/solarsensor owner=root group=root mode=0755
        - name: Copy SolarMax python library
          copy: src=code/solarsensor/solarmax3.py dest=/usr/lib/python3.9/solarmax3.py owner=root group=root mode=0644
        - name: Copy solar sensor service scripts
          copy: src=code/solarsensor/solarsensor.service dest=/etc/systemd/system/solarsensor.service owner=root group=root mode=0644
        - name: Copy the solar sensor config to home
          template: src=code/solarsensor/solarsensor.json.j2 dest=/home/pi/solarsensor.json owner=pi group=pi mode=0644
        - name: Start and enable the solar sensor service
          systemd:
            state: started
            enabled: yes
            daemon_reload: yes
            name: solarsensor    