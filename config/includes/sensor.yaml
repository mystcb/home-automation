###
# Random sensors which need to exist!
###

### Calculation for kWh for the power sensors
  - platform: integration
    source: sensor.power_usage
    unique_id: power_usage_kwh
    unit_prefix: k
    unit_time: h

### Calculation for kWh for the solar sensors
  - platform: integration
    source: sensor.solar_power
    unique_id: solar_power_kwh
    unit_prefix: k
    unit_time: h

### Calculation for kWh for the power sensor positive usage
  - platform: integration
    source: sensor.power_usage_positive
    unique_id: power_usage_postive_kwh
    unit_prefix: k
    unit_time: h

### Calculation for kWh for the power sensor return negative usage
  - platform: integration
    source: sensor.power_return_negative
    unique_id: power_return_negative_kwh
    unit_prefix: k
    unit_time: h

### Template sensors for more custom types
  - platform: template
    sensors:
      ### Calculate the positive Watts for usage
      power_usage_positive:
        unique_id: power_usage_positive
        unit_of_measurement: 'W'
        device_class: "energy"
        value_template: >
          {% if states('sensor.power_usage') | int > 0 %}
            {{ states('sensor.power_usage') }}
          {% else -%}
            0
          {% endif %}

      ### Calculate the negative Watts for return
      power_return_negative:
        unique_id: power_return_negative
        unit_of_measurement: 'W'
        device_class: "energy"
        value_template: >
          {% if states('sensor.power_usage') | int > 0 %}
            0
          {% else -%}
            {{ (states('sensor.power_usage') | float ) | abs }}
          {% endif %}

      ### Calculate the total amount of energy used (including solar)
      power_total_usage:
        unique_id: power_total_usage
        unit_of_measurement: 'W'
        device_class: "energy"
        value_template: >
          {{ states("sensor.power_usage_positive") |float(0)
           + states("sensor.solar_power") |float(0)
           - states("sensor.power_return_negative") |float(0) }}

      ### Calculate the total amount of energy used and generated (including solar)
      power_total_generated:
        unique_id: power_total_generated
        unit_of_measurement: 'W'
        device_class: "energy"
        value_template: >
          {{ states("sensor.power_usage_positive") |float(0)
           + states("sensor.solar_power") | float(0) }}
  

### Waste Collection Sensor
  - platform: waste_collection_schedule
    source_index: 0
    name: Horsham Bin Collection

  - platform: waste_collection_schedule
    name: waste_next_rubbish_collection
    value_template: '{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}{{value.daysTo}} days{% endif %}'
    types:
      - "Rubbish"

  - platform: waste_collection_schedule
    name: waste_next_recycle_collection
    value_template: '{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}{{value.daysTo}} days{% endif %}'
    types:
      - "Recycling"

  - platform: waste_collection_schedule
    name: waste_next_garden_collection
    value_template: '{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}{{value.daysTo}} days{% endif %}'
    types:
      - "Garden Waste"
